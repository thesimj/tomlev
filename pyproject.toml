[project]
name = "tomlev"
version = "1.0.3"
description = "Type-safe TOML configuration management with environment variable substitution and automatic validation for modern Python applications."
authors = [{ name = "Nick Bubelich", email = "m+github@bubelich.com" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"
keywords = [
    "toml",
    "configuration",
    "environment-variables",
    "type-safety",
    "validation",
    "config-management",
    "settings",
    "python311",
    "type-hints"
]
classifiers = [
    # Development Status
    "Development Status :: 5 - Production/Stable",
    # License
    "License :: OSI Approved :: MIT License",
    # Operating System
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    # Topic
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    # Intended Audience
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    # Programming Language
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    # Typing
    "Typing :: Typed",
]

[dependency-groups]
dev = [
    "ruff",
    "mypy~=1.17.0",
    "pytest~=8.4.0",
    "pre-commit~=4.3.0",
    "pytest-cov~=7.0.0",
    "hatchling~=1.27.0",
    "bandit~=1.8.0",
    "safety~=3.6.0",
    "docstr-coverage~=2.3.0",
    "radon~=6.0.1",
    "pytest-benchmark~=5.1.0",
    "hypothesis~=6.138.0"
]

[project.urls]
"Homepage" = "https://github.com/thesimj/tomlev"
"Repository" = "https://github.com/thesimj/tomlev"
"Bug Tracker" = "https://github.com/thesimj/tomlev/issues"
"Documentation" = "https://github.com/thesimj/tomlev/blob/main/README.md"
"Changelog" = "https://github.com/thesimj/tomlev/blob/main/CHANGELOG.md"
"Discussions" = "https://github.com/thesimj/tomlev/discussions"
"Funding" = "https://github.com/sponsors/thesimj"
"Security" = "https://github.com/thesimj/tomlev/security"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["tomlev"]

[project.scripts]
tomlev = "tomlev.__main__:main"

[tool.coverage.run]
branch = true
source = ['tomlev']

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Ruff configuration
line-length = 120
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["I", "E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Use double quotes for strings.
quote-style = "double"

# Indent with spaces, rather than tabs.
indent-style = "space"

# Respect magic trailing commas.
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending.
line-ending = "auto"

[tool.bandit]
# Exclude test directories from security scanning
exclude_dirs = ["tests"]
# Skip specific security checks that are not applicable
skips = ["B101"]  # Skip assert_used test
# Set confidence level for security issues
confidence = "medium"
# Set severity level for security issues
severity = "medium"

[tool.bandit.assert_used]
# Configure assert usage check
skips = ["*_test.py", "test_*.py"]

[tool.docstr-coverage]
# Docstring coverage configuration
badge = true
fail-under = 95
exclude = ["tests"]
verbose = 2

[tool.radon]
# Code complexity analysis
exclude = "tests/*,docs/*"
show_complexity = true
min_complexity = "B"

[tool.pytest.ini_options]
# Enhanced pytest configuration
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests"
]
