name: TomlEv CI/CD Pipeline


on:
  push:
    branches: [ main, develop ]

  pull_request:
    types: [ assigned, opened, synchronize, reopened ]

  release:
    types: [ published ]


env:
  POETRY_VERSION: 1.5.1


# specify jobs to done
jobs:
  build-and-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.8', '3.9', '3.10', '3.11', 'pypy-3.8' ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: "Set up Python ${{ matrix.os }} - ${{ matrix.python-version }}"
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip && \
            pip install "poetry==${POETRY_VERSION}" && \
            poetry install --no-root;

      - name: Run tests
        run: poetry run pytest -v --tb=native -p no:warnings --cov-fail-under 90 --cov

  coveralls:
    needs: build-and-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip && \
            pip install "poetry==${POETRY_VERSION}" && \
            poetry install --no-root;

      - name: Run tests
        run: poetry run pytest -v --tb=native -p no:warnings --cov-fail-under 90 --cov --cov-report xml

      - name: Build lcov coverage file
        run: poetry run coverage lcov

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

  pip-publish:
    needs: build-and-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Show Github Ref
        run: echo ${{ github.ref }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip && \
            pip install "poetry==${POETRY_VERSION}" && \
            poetry install --no-root;

      - name: Build and publish package to PyPi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --build
